version: "3.9"                                     # 使用 Compose 3.9 语法版本，通用且新
services:                                          # 定义要运行的服务集合
  jenkins:                                         # Jenkins 服务：负责前端构建
    image: jenkins/jenkins:lts-jdk17
    container_name: wj-jenkins                     # 固定容器名，方便 docker logs / ps 查询
    restart: unless-stopped                        # 除非手动停止，否则异常退出会自动拉起
    ports:
      - "8080:8080"                                # 宿主 8080 → Jenkins Web 界面
      - "50000:50000"                              # Jenkins inbound agent 端口（保留，可能未来用）
    environment:
      TZ: Asia/Shanghai                            # 时区，影响日志时间显示
    volumes:
      - /app/jenkins_home:/var/jenkins_home        # 绝对路径：持久化 Jenkins 主目录；删除该目录相当于重装，第一次执行脚本，jenkins_home 空目录会自动初始化
      - /app/shared-dist:/var/jenkins_home/deploy/frontend_dist             # 构建产物共享目录；Jenkins 将 dist/* 复制到这里
    networks:
      - ci_net                                       # 加入自定义网络，使与 Nginx 容器互通（未来扩展方便）

  nginx:                                           # Nginx 服务：仅提供静态文件访问
    image: nginx:1.28.0
    container_name: wj-nginx                       # 固定容器名
    restart: unless-stopped                        # 异常自动重启，保证前端站点存活
    depends_on:
      - jenkins                                    # 启动顺序提示：先启动 Jenkins（不是硬依赖，只是声明）
    ports:
      - "80:80"                                    # 宿主 80 → Nginx 80；浏览器 http://localhost 访问
    volumes:
      - /app/shared-dist:/usr/share/nginx/html:ro  # 将 Jenkins 产物目录挂载为 Nginx 静态根，只读防误改
      - /app/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro   # 将 Jenkins 产物目录挂载为 Nginx 静态根，只读防误改
    networks:
      - ci_net                                       # 同网络：未来可加反向代理、健康检查等

networks:                                          # 自定义网络声明
  ci_net:
    driver: bridge                                 # 使用默认桥接模式（本地开发足够）

# 注意：
# 1. 所有宿主机目录使用绝对路径 /app/... ，需要你在宿主机先创建并赋予权限。
# 2. shared-dist 与 jenkins_home 目录不可与其他无关服务混用，避免污染。